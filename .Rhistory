kane <- data.frame(name,sex,age,height,weight,stringsAsFactors=FALSE)
name <- c("Alfred","Alice","Barbara","Carol","Henry","James","Jane","Janet","Jeffrey","John","Joyce","Judy","Louise","Mary","Philip","Robert","Ronald","Thomas","William")
sex <- c("M","F","F","F","M","M","F","F","M","M","F","F","F","F","M","M","M","M","M")
age <- c(14,13,13,14,14,12,12,15,13,12,11,14,12,15,16,12,15,11,15)
height <- c(69,56.5,65.3,62.8,63.5,57.3,59.8,62.5,62.5,59,51.3,64.3,56.3,66.5,72,64.8,67,57.5,66.5)
weight <- c(112.5,84,98,102.5,102.5,83,84.5,112.5,84,99.5,50.5,90,77,112,150,128,133,85,112)
kane <- data.frame(name,sex,age,height,weight,stringsAsFactors=FALSE)
kane
str(kane)
rock <- kane
rock[1:5,1:5]
rock[1,1:5]
rock[c(1,3,5,7,9),1:5]
head(rock)
tail(rock)
rock[rock$age>12,]
rock[rock$age>13,]
attach(rock)
rock[height<65,4]
rock[height<65,]
rock[,4]
rock[rock$age,]
rock[,4]
rock[,1]
rock[,1:3]
rock[,c(1,3,4,5)]
rock[1,4]
rock[1,1]
rock[sex=="M" & age>12,]
rock[height>60 | age<14,]
rock[rock$name %in% c("Alfred","Alice","Barbara","Carol","Henry","James","Jane","Janet","Jeffrey"),]
rock[order(sex,-age,height),]
rock[age>12 & age<16 & sex=="M",]
rock[order(-age,-sex,height),]
rock[order(-age,sex,height),]
rock[weight>100 | sex=="F',]
rock[weight>100 | sex=="F',]
rock[weight>100 | sex=="F",]
rock_1 <- rock[age<14 & height>50,]
rock_1
rock_1[,c(3,1,5)]
rock[height>60,c("name","sex")]
rock[order(-height,weight),]
rock[order(weight,-height),]
kane
head(rock)
tail(rock)
rock[sex=="M" & age>12,]
rock[height>60 | age<14,]
rock[age>12 & age<16 & sex=="M",]
rock[weight>100 | sex=="F",]
rock_1 <- rock[age<14 & height>50,c(3,1,5)]
rock[age<14 & height>50,c(3,1,5)]
kane
str(kane)
head(rock)
tail(rock)
rock[rock$age,]
kane
str(kane)
head(rock)
tail(rock)
rock[height<65,]
rock[sex=="M" & age>12,]
rock[height>60 | age<14,]
rock[age>12 & age<16 & sex=="M",]
rock[weight>100 | sex=="F",]
rock[age<14 & height>50,c(3,1,5)]
rock[height>60,c("name","sex")]
rock[rock$name %in% c("Alfred","Alice","Barbara","Carol","Henry","James","Jane","Janet","Jeffrey"),]
rock[order(sex,-age,height),]
rock[order(-age,sex,height),]
rock[order(-height,weight),]
rock[order(weight,-height),]
q()
setwd("C:\\Users\\dell\\Desktop\\AITS")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
head(train)
head(test)
# columns not required
train$PassengerId <- NULL
train$Name<- NULL
train$Cabin<- NULL
test$PassengerId <- NULL
test$Name<- NULL
test$Cabin<- NULL
sapply(train, function(x) sum(is.na(x)))
sapply(train, function(x) sum(is.na(x))/length(x))
sapply(test, function(x) sum(is.na(x)))
sapply(test, function(x) sum(is.na(x))/length(x))
sapply(train, function(x) length(unique(x)))
sapply(test, function(x) length(unique(x)))
# taking only the required variables
head(train)
head(test)
train = subset(train, select = c(1:6,8,9))
test = subset(test, select = c(1:6,8,9))
train[is.na(train$Age)==TRUE,"Age"] <- mean(train$Age,na.rm=TRUE)
test[is.na(test$Age)==TRUE,"Age"] <- mean(test$Age,na.rm=TRUE)
train <- na.omit(train)
test <- na.omit(test)
##############
head(train)
head(test)
train$SibSp <- as.factor(train$SibSp)
train$Parch<- as.factor(train$Parch)
train$Pclass<- as.factor(train$Pclass)
train$Survived<- as.factor(train$Survived)
test$SibSp <- as.factor(test$SibSp)
test$Parch<- as.factor(test$Parch)
test$Pclass<- as.factor(test$Pclass)
test$Survived<- as.factor(test$Survived)
## the best one
library(kernlab)
svm.model <- ksvm(Survived ~ ., data = train, kernel = 'vanilladot')
svm.model
svm_test.predict <- predict(svm.model, test[,2:8])
head(svm_test.predict)
svm_train.predict <- predict(svm.model, train[,2:8])
head(svm_train.predict)
data_train <- table(svm_train.predict,train$Survived)
data_train
data_test <- table(svm_test.predict,test$Survived)
data_test
accuracy_test <- sum(diag(data_test))/sum(data_test)
accuracy_test
accuracy_train  <- sum(diag(data_train ))/sum(data_train )
accuracy_train 
save.image("C:\\Users\\dell\\Desktop\\AITS\\SVM")
q()
